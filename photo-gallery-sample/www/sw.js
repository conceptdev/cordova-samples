try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,i="GET"){this.handler=s(t),this.match=e,this.method=i}}class n extends i{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const a=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class r{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:i,route:n}=this.findMatchingRoute({url:s,request:e,event:t});let a,r=n&&n.handler;if(!r&&this.s&&(r=this.s),r){try{a=r.handle({url:s,request:e,event:t,params:i})}catch(e){a=Promise.reject(e)}return a instanceof Promise&&this.i&&(a=a.catch(i=>this.i.handle({url:s,request:e,event:t}))),a}}findMatchingRoute({url:e,request:t,event:s}){const i=this.t.get(t.method)||[];for(const n of i){let i;const a=n.match({url:e,request:t,event:s});if(a)return i=a,(Array.isArray(a)&&0===a.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(i=void 0),{route:n,params:i}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let c;const o=()=>(c||(c=new r,c.addFetchListener(),c.addCacheListener()),c);const l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[l.prefix,e,l.suffix].filter(e=>e&&e.length>0).join("-"),f=e=>e||u(l.precache),h=e=>e||u(l.runtime);function d(e){e.then(()=>{})}const w=new Set;class p{constructor(e,t,{onupgradeneeded:s,onversionchange:i}={}){this.o=null,this.l=e,this.u=t,this.h=s,this.p=i||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const i=indexedDB.open(this.l,this.u);i.onerror=()=>t(i.error),i.onupgradeneeded=e=>{s?(i.transaction.abort(),i.result.close()):"function"==typeof this.h&&this.h(e)},i.onsuccess=()=>{const t=i.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:i="next",count:n,includeKeys:a=!1}={}){return await this.transaction([e],"readonly",(r,c)=>{const o=r.objectStore(e),l=t?o.index(t):o,u=[],f=l.openCursor(s,i);f.onsuccess=()=>{const e=f.result;e?(u.push(a?e:e.value),n&&u.length>=n?c(u):e.continue()):c(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((i,n)=>{const a=this.o.transaction(e,t);a.onabort=()=>n(a.error),a.oncomplete=()=>i(),s(a,e=>i(e))})}async g(e,t,s,...i){return await this.transaction([t],s,(s,n)=>{const a=s.objectStore(t),r=a[e].apply(a,i);r.onsuccess=()=>n(r.result)})}close(){this.o&&(this.o.close(),this.o=null)}}p.prototype.OPEN_TIMEOUT=2e3;const b={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(b))for(const s of t)s in IDBObjectStore.prototype&&(p.prototype[s]=async function(t,...i){return await this.g(s,t,e,...i)});try{self["workbox:expiration:5.1.4"]&&_()}catch(e){}const g=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class m{constructor(e){this.m=e,this.o=new p("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const i=indexedDB.deleteDatabase(e);i.onerror=()=>{s(i.error)},i.onblocked=()=>{s(new Error("Delete blocked"))},i.onsuccess=()=>{t()}})})(this.m)}async setTimestamp(e,t){const s={url:e=g(e),timestamp:t,cacheName:this.m,id:this.R(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this.R(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,i)=>{const n=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),a=[];let r=0;n.onsuccess=()=>{const s=n.result;if(s){const i=s.value;i.cacheName===this.m&&(e&&i.timestamp<e||t&&r>=t?a.push(s.value):r++),s.continue()}else i(a)}}),i=[];for(const e of s)await this.o.delete("cache-entries",e.id),i.push(e.url);return i}R(e){return this.m+"|"+g(e)}}class y{constructor(e,t={}){this.q=!1,this.U=!1,this.L=t.maxEntries,this.N=t.maxAgeSeconds,this.m=e,this._=new m(e)}async expireEntries(){if(this.q)return void(this.U=!0);this.q=!0;const e=this.N?Date.now()-1e3*this.N:0,t=await this._.expireEntries(e,this.L),s=await self.caches.open(this.m);for(const e of t)await s.delete(e);this.q=!1,this.U&&(this.U=!1,d(this.expireEntries()))}async updateTimestamp(e){await this._.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.N){return await this._.getTimestamp(e)<Date.now()-1e3*this.N}return!1}async delete(){this.U=!1,await this._.expireEntries(1/0)}}const v=(e,t)=>e.filter(e=>t in e),R=async({request:e,mode:t,plugins:s=[]})=>{const i=v(s,"cacheKeyWillBeUsed");let n=e;for(const e of i)n=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:n}),"string"==typeof n&&(n=new Request(n));return n},q=async({cacheName:e,request:t,event:s,matchOptions:i,plugins:n=[]})=>{const a=await self.caches.open(e),r=await R({plugins:n,request:t,mode:"read"});let c=await a.match(r,i);for(const t of n)if("cachedResponseWillBeUsed"in t){const n=t.cachedResponseWillBeUsed;c=await n.call(t,{cacheName:e,event:s,matchOptions:i,cachedResponse:c,request:r})}return c},U=async({cacheName:e,request:s,response:i,event:n,plugins:r=[],matchOptions:c})=>{const o=await R({plugins:r,request:s,mode:"write"});if(!i)throw new t("cache-put-with-no-response",{url:a(o.url)});const l=await(async({request:e,response:t,event:s,plugins:i=[]})=>{let n=t,a=!1;for(const t of i)if("cacheWillUpdate"in t){a=!0;const i=t.cacheWillUpdate;if(n=await i.call(t,{request:e,response:n,event:s}),!n)break}return a||(n=n&&200===n.status?n:void 0),n||null})({event:n,plugins:r,response:i,request:o});if(!l)return;const u=await self.caches.open(e),f=v(r,"cacheDidUpdate"),h=f.length>0?await q({cacheName:e,matchOptions:c,request:o}):null;try{await u.put(o,l)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of w)await e()}(),e}for(const t of f)await t.cacheDidUpdate.call(t,{cacheName:e,event:n,oldResponse:h,newResponse:l,request:o})},L=q,x=async({request:e,fetchOptions:s,event:i,plugins:n=[]})=>{if("string"==typeof e&&(e=new Request(e)),i instanceof FetchEvent&&i.preloadResponse){const e=await i.preloadResponse;if(e)return e}const a=v(n,"fetchDidFail"),r=a.length>0?e.clone():null;try{for(const t of n)if("requestWillFetch"in t){const s=t.requestWillFetch,n=e.clone();e=await s.call(t,{request:n,event:i})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const c=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of n)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:i,request:c,response:t}));return t}catch(e){for(const t of a)await t.fetchDidFail.call(t,{error:e,event:i,originalRequest:r.clone(),request:c.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}let N;async function E(e,t){const s=e.clone(),i={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},n=t?t(i):i,a=function(){if(void 0===N){const e=new Response("");if("body"in e)try{new Response(e.body),N=!0}catch(e){N=!1}N=!1}return N}()?s.body:await s.blob();return new Response(a,n)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function K(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:i}=e;if(!i)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(i,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(i,location.href),a=new URL(i,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:a.href}}class M{constructor(e){this.m=f(e),this.K=new Map,this.M=new Map,this.O=new Map}addToCacheList(e){const s=[];for(const i of e){"string"==typeof i?s.push(i):i&&void 0===i.revision&&s.push(i.url);const{cacheKey:e,url:n}=K(i),a="string"!=typeof i&&i.revision?"reload":"default";if(this.K.has(n)&&this.K.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.K.get(n),secondEntry:e});if("string"!=typeof i&&i.integrity){if(this.O.has(e)&&this.O.get(e)!==i.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this.O.set(e,i.integrity)}if(this.K.set(n,e),this.M.set(n,a),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],i=[],n=await self.caches.open(this.m),a=await n.keys(),r=new Set(a.map(e=>e.url));for(const[e,t]of this.K)r.has(t)?i.push(e):s.push({cacheKey:t,url:e});const c=s.map(({cacheKey:s,url:i})=>{const n=this.O.get(s),a=this.M.get(i);return this.T({cacheKey:s,cacheMode:a,event:e,integrity:n,plugins:t,url:i})});await Promise.all(c);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:i}}async activate(){const e=await self.caches.open(this.m),t=await e.keys(),s=new Set(this.K.values()),i=[];for(const n of t)s.has(n.url)||(await e.delete(n),i.push(n.url));return{deletedURLs:i}}async T({cacheKey:e,url:s,cacheMode:i,event:n,plugins:a,integrity:r}){const c=new Request(s,{integrity:r,cache:i,credentials:"same-origin"});let o,l=await x({event:n,plugins:a,request:c});for(const e of a||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:n,request:c,response:l}):l.status<400))throw new t("bad-precaching-response",{url:s,status:l.status});l.redirected&&(l=await E(l)),await U({event:n,plugins:a,response:l,request:e===s?c:new Request(e),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.K}getCachedURLs(){return[...this.K.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.K.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.m,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const i=this.createHandler(s),n=new Request(e);return()=>i({request:n})}}let O;const T=()=>(O||(O=new M),O);const D=(e,t)=>{const s=T().getURLsToCacheKeys();for(const i of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:i,urlManipulation:n}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(a,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(i){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:a});for(const t of e)yield t.href}}(e,t)){const e=s.get(i);if(e)return e}};let P=!1;function k(e){P||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:i}={})=>{const n=f();self.addEventListener("fetch",a=>{const r=D(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:i});if(!r)return;let c=self.caches.open(n).then(e=>e.match(r)).then(e=>e||fetch(r));a.respondWith(c)})})(e),P=!0)}const A=[],C={get:()=>A,add(e){A.push(...e)}},S=e=>{const t=T(),s=C.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},j=e=>{const t=T();e.waitUntil(t.activate())};var I;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),I={},function(e){T().addToCacheList(e),e.length>0&&(self.addEventListener("install",S),self.addEventListener("activate",j))}([{url:"favicon.ico",revision:"5ada5040bc28c5532b7f50e0dbda116e"},{url:"index.html",revision:"8be26a4777747f2168056c5efdf9364c"},{url:"style.css",revision:"3bcce5a4d90c84ad3a0ab31d00be4a86"},{url:"images/manifest/icon-512x512.png",revision:"ab7752ef79a581e61c7b9211c745e920"},{url:"images/manifest/icon-192x192.png",revision:"d7f8ecc5dadbefd211c17a007ba48a39"},{url:"images/manifest/safari-pinned-tab.svg",revision:"db559a54eb14b1b16f38660a32497cf1"},{url:"manifest.json",revision:"9c129d82872cd46dec6031844207413e"},{url:"web_modules/import-map.json",revision:"cff34885ce08efa8121a0810189386af"},{url:"images/aerial-l.webp",revision:"893abf94023a6ef3b39af9f15d4b15aa"},{url:"images/air-balloon-l.webp",revision:"9d2751efeb596e49237811d44f6d8962"},{url:"images/asia-l.webp",revision:"c0bb6323ca6c931e8b3853093c731a7c"},{url:"images/autumn-l.webp",revision:"fb59c160e0b029349ec8fbf9eeaf2d68"},{url:"images/building-l.webp",revision:"0694279c067ed01ba0c84fe0e2b9e53e"},{url:"images/catamaran-l.webp",revision:"1f3aece905a8e7d8679a2f0732ff14a4"},{url:"images/cats-l.webp",revision:"8c9bfb288a8dddf147a9399c8d44c323"},{url:"images/china-l.webp",revision:"69b0235a62f42bbf2c567c7e1936c04d"},{url:"images/church-l.webp",revision:"b6dbbca2eb44012aeaf80b5e08ec595d"},{url:"images/city-l.webp",revision:"f8adc642e65ed0021eed935bddb5baa1"},{url:"images/city2-l.webp",revision:"195c3da1655e036485756551697ed708"},{url:"images/cloud-l.webp",revision:"d2b9800ce82f3b296e3862913852b532"},{url:"images/desert-l.webp",revision:"d09b5d9bdb2593bdf3aa0d8b48e73a01"},{url:"images/disney-l.webp",revision:"cbbc8603161bf68861b88923028eff48"},{url:"images/egypt-l.webp",revision:"d929339afc1310f0a0cae993f0c445e1"},{url:"images/feather-l.webp",revision:"4ee9ddb7a7ec435826f9d45821c19740"},{url:"images/forest-l.webp",revision:"62accdf1f692f5eb5b8882c1040e5f31"},{url:"images/fruits-l.webp",revision:"4472423691a91e6190abdfe7c6ae8b74"},{url:"images/golden-gate-l.webp",revision:"5e81e78c5dcd052e7968a16310e325f2"},{url:"images/greece-l.webp",revision:"f50fd606b8a3f0fdf9ca910b54ed44c2"},{url:"images/lake-l.webp",revision:"dc8d3e88385d01f3d5daf7e0546b1d19"},{url:"images/marocco-l.webp",revision:"b01bd09dcafa5719c44ddd70a5e4737d"},{url:"images/milky-way-l.webp",revision:"9388266b1083c3ef4a1657f3364f1f07"},{url:"images/mountain-l.webp",revision:"f27d2d64fdc1ad3a63de4cf2db64888a"},{url:"images/mountain2-l.webp",revision:"f7f610ea6521eee222d202a5cf58bca7"},{url:"images/new-york-l.webp",revision:"df82afa08ed57e51f65d82f8ac15a4f4"},{url:"images/palm-tree-l.webp",revision:"f9c844fc1ccaa4fbe4c2bbc232cd25b7"},{url:"images/pool-l.webp",revision:"50ec24e70695deec75a8e25388718b00"},{url:"images/rainbow-l.webp",revision:"89e1ac1a9b55bcfc9260d8107f0c090a"},{url:"images/restaurant-l.webp",revision:"38ddd247b68037334e90416875f5cc64"},{url:"images/river-l.webp",revision:"49e6846be2aeb6655e8869a547dde7f5"},{url:"images/river2-l.webp",revision:"8bea78a372763ef6511fe003007f739c"},{url:"images/road-l.webp",revision:"189fd3e3062b6848711559304e6188e6"},{url:"images/road2-l.webp",revision:"dfff732c84c495561b7d6d6c50026610"},{url:"images/sand-l.webp",revision:"c5b0d9dcd4abc9aa11557e98487afe3c"},{url:"images/sea-l.webp",revision:"aa4edba77245ddea6bc10cb074faa254"},{url:"images/sfo-l.webp",revision:"89c6265fa4ba36850fae0405259184a4"},{url:"images/stars-l.webp",revision:"d395b56613450c06c554423a8128c0ac"},{url:"images/surf-l.webp",revision:"f23f9d50a0ad0212079f3fcf7904db56"},{url:"images/tents-l.webp",revision:"d6bc459f859fbf47f76568dca6c3591e"},{url:"images/volcano-l.webp",revision:"658ef5a4c88cfae7e975342043df67c3"},{url:"images/waterfall-l.webp",revision:"2aa61a22a1161cd9e39d3cdbf15c0bc2"},{url:"images/waterfall2-l.webp",revision:"a926339f2d0e713d84d3f558122db4f2"},{url:"images/wave-l.webp",revision:"ace7bacf800bdbd2cffc8980a0da7bd0"},{url:"dist/demo.js",revision:"abfe5514c1aa8dc59cf037390bd13625"}]),k(I),function(e,s,a){let r;if("string"==typeof e){const t=new URL(e,location.href);r=new i(({url:e})=>e.href===t.href,s,a)}else if(e instanceof RegExp)r=new n(e,s,a);else if("function"==typeof e)r=new i(e,s,a);else{if(!(e instanceof i))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});r=e}o().registerRoute(r)}(/\.(?:png|jpg|jpeg|svg|webp)$/,new class{constructor(e={}){this.m=h(e.cacheName),this.D=e.plugins||[],this.P=e.fetchOptions,this.k=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let i,n=await L({cacheName:this.m,request:s,event:e,matchOptions:this.k,plugins:this.D});if(!n)try{n=await this.A(s,e)}catch(e){i=e}if(!n)throw new t("no-response",{url:s.url,error:i});return n}async A(e,t){const s=await x({request:e,event:t,fetchOptions:this.P,plugins:this.D}),i=s.clone(),n=U({cacheName:this.m,request:e,response:i,event:t,plugins:this.D});if(t)try{t.waitUntil(n)}catch(e){}return s}}({cacheName:"images",plugins:[new class{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:i})=>{if(!i)return null;const n=this.C(i),a=this.S(s);d(a.expireEntries());const r=a.updateTimestamp(t.url);if(e)try{e.waitUntil(r)}catch(e){}return n?i:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.S(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.j=e,this.N=e.maxAgeSeconds,this.I=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),w.add(t))}S(e){if(e===h())throw new t("expire-custom-caches-only");let s=this.I.get(e);return s||(s=new y(e,this.j),this.I.set(e,s)),s}C(e){if(!this.N)return!0;const t=this.W(e);if(null===t)return!0;return t>=Date.now()-1e3*this.N}W(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.I)await self.caches.delete(e),await t.delete();this.I=new Map}}({maxEntries:15,purgeOnQuotaError:!0})]}),"GET");
//# sourceMappingURL=sw.js.map
